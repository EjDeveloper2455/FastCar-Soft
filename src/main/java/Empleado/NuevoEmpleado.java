/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Empleado;

import java.awt.FileDialog;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Calendar;
import java.util.Date;

import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;

import org.json.simple.JSONObject;
import org.json.simple.parser.ParseException;

import com.toedter.calendar.JDateChooser;

import Clases.Json;
import Clases.ModeloTabla;
import Clases.Peticion;
import Clases.Webcam;
import Principal.MenuPrincipal;

import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.JButton;
import java.awt.Font;
import java.awt.Color;
import javax.swing.JComboBox;
import java.text.SimpleDateFormat;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

/**
 *
 * @author HTS
 */
@SuppressWarnings("serial")
public class NuevoEmpleado extends javax.swing.JPanel {

	private javax.swing.JDialog dialog;
	private MenuPrincipal menuPrincipal;
	@SuppressWarnings("unused")
	private ImageIcon imgFoto;
	@SuppressWarnings("unused")
	private Json jsonCargo, jsonDepto, jsonSucursal, jsonNuevosUsuarios, jsonUsuarios;
	private JLabel lbImgCargando;
	private JLabel lbTextoCargando;
	private JButton btnGuardar;
	PanelEmpleado panelEmpleado;
	public NuevoEmpleado(javax.swing.JDialog dialog, MenuPrincipal menuPrincipal,PanelEmpleado panelEmpleado) {

		@SuppressWarnings("unused")
		FileInputStream archivoFoto;
		this.dialog = dialog;
		this.menuPrincipal = menuPrincipal;
		this.imgFoto = null;
		this.panelEmpleado = panelEmpleado;
		jsonCargo = new Json();
		jsonDepto = new Json();
		jsonSucursal = new Json();
		jsonNuevosUsuarios = new Json();
		jsonUsuarios = new Json();

		initComponents();

		btnGuardar = new JButton();

		btnGuardar.addActionListener(e -> guardar());
		btnGuardar.setForeground(new Color(0, 0, 0));
		btnGuardar.setText("GUARDAR");
		btnGuardar.setFont(new Font("Arial Black", Font.BOLD, 14));
		btnGuardar.setBounds(506, 591, 200, 40);
		btnGuardar.setBackground(new Color(255, 255, 255));
		add(btnGuardar);

		btnLimpiar = new JButton();
		btnLimpiar.setForeground(new Color(0, 0, 0));
		btnLimpiar.setText("LIMPIAR");
		btnLimpiar.setFont(new Font("Arial Black", Font.BOLD, 14));
		btnLimpiar.setBackground(new Color(255, 255, 255));
		btnLimpiar.setBounds(195, 591, 200, 40);
		add(btnLimpiar);

		lbImgCargando = new JLabel(new ImageIcon(getClass().getResource("/imagenes/cargando.gif")));
		lbImgCargando.setBounds(360, 150, 200, 200);
		this.add(lbImgCargando);

		lbTextoCargando = new JLabel("Guardando los datos del empleado..", SwingConstants.CENTER);
		lbTextoCargando.setFont(new Font("Arial Black", Font.BOLD, 12));
		lbTextoCargando.setBounds(320, 401, 286, 30);
		lbTextoCargando.setForeground(new Color(29, 63, 114));
		this.add(lbTextoCargando);

		lbImgCargando.setVisible(false);
		lbTextoCargando.setVisible(false);

		obtenerCargo();
		obtenerDepto();
		obtenerSucursal();
		obtenerTodosUsuarios();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		jPanel1 = new javax.swing.JPanel();
		panelImagen = new javax.swing.JPanel();
		btnTomarFoto = new javax.swing.JButton();
		btnTomarFoto.setForeground(new Color(0, 0, 0));
		btnTomarFoto.setBounds(130, 260, 110, 30);
		btnEliminarImagen = new javax.swing.JButton();
		btnEliminarImagen.setForeground(new Color(0, 0, 0));
		btnEliminarImagen.setBounds(65, 15, 120, 30);
		jlblFoto = new javax.swing.JLabel();
		jlblFoto.setBounds(25, 50, 200, 200);
		btnSubirImagen = new javax.swing.JButton();
		btnSubirImagen.setForeground(new Color(0, 0, 0));
		btnSubirImagen.setBounds(10, 260, 110, 30);
		panelDatosPersonales = new javax.swing.JPanel();
		lbIdentidad = new javax.swing.JLabel();
		txtNombre = new javax.swing.JTextField();
		lbNombre = new javax.swing.JLabel();
		jTxtIdentidad = new javax.swing.JFormattedTextField();
		validarid = new javax.swing.JLabel();
		panelUsuario = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jScrollPane1.setBounds(10, 18, 500, 191);
		jTableClientes = new javax.swing.JTable();
		btnAgregarUsuario = new javax.swing.JButton();
		btnAgregarUsuario.setFont(new Font("Arial", Font.BOLD, 12));
		btnAgregarUsuario.setForeground(new Color(0, 0, 0));
		btnAgregarUsuario.setBounds(195, 212, 159, 30);
		panelInformacionLaborales = new javax.swing.JPanel();
		jLabel12 = new javax.swing.JLabel();
		jLabel12.setBounds(10, 20, 200, 14);
		validarid1 = new javax.swing.JLabel();
		validarid1.setBounds(454, 29, 20, 20);
		cmbDepto = new javax.swing.JComboBox<>();
		cmbDepto.setBounds(10, 35, 270, 25);
		cmbCargo = new javax.swing.JComboBox<>();
		cmbCargo.setBounds(10, 80, 270, 25);
		jLabel15 = new javax.swing.JLabel();
		jLabel15.setBounds(10, 65, 200, 14);
		panelContacto = new javax.swing.JPanel();
		jLabel11 = new javax.swing.JLabel();
		jLabel11.setBounds(10, 75, 143, 14);
		jLabel13 = new javax.swing.JLabel();
		jLabel13.setBounds(10, 20, 124, 14);
		validarid2 = new javax.swing.JLabel();
		validarid2.setBounds(454, 29, 20, 20);
		txtTelefono = new javax.swing.JFormattedTextField();
		txtTelefono.setBounds(10, 40, 270, 25);
		txtCorreo = new javax.swing.JTextField();
		txtCorreo.setBounds(10, 92, 270, 25);
		panelUbicacion = new javax.swing.JPanel();
		jLabel16 = new javax.swing.JLabel();
		jLabel16.setBounds(16, 20, 324, 14);
		validarid4 = new javax.swing.JLabel();
		validarid4.setBounds(538, 29, 20, 20);
		jScrollPane2 = new javax.swing.JScrollPane();
		jScrollPane2.setBounds(10, 40, 330, 199);
		txtDireccion = new javax.swing.JTextArea();

		this.setLayout(null);
		setBackground(new java.awt.Color(255, 255, 255));

		panelImagen.setBackground(new java.awt.Color(255, 255, 255));
		panelImagen.setBorder(javax.swing.BorderFactory.createTitledBorder(
				new javax.swing.border.LineBorder(new java.awt.Color(71, 84, 130), 2, true), "Imagen",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(71, 84, 130))); // NOI18N
		panelImagen.setBounds(640, 10, 250, 304);
		this.add(panelImagen);

		btnTomarFoto.setFont(new Font("Arial", Font.BOLD, 10)); // NOI18N
		btnTomarFoto.setText("TOMAR FOTO");
		btnTomarFoto.addActionListener(e -> {
			new Webcam(this, dialog).setVisible(true);
			;
		});
		btnTomarFoto.setBackground(new Color(255, 255, 255));
		btnEliminarImagen.setFont(new Font("Arial", Font.BOLD, 10)); // NOI18N
		btnEliminarImagen.setBackground(new Color(255, 255, 255));
		btnEliminarImagen.setText("ELIMINAR");
		btnEliminarImagen.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		jlblFoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		jlblFoto.setIcon(new ImageIcon(getClass().getResource("/imagenes/empleado_default.png")));

		btnSubirImagen.setFont(new Font("Arial", Font.BOLD, 10)); // NOI18N
		btnSubirImagen.setText("SUBIR FOTO");
		btnSubirImagen.addActionListener(e -> {
			openFile();
		});
		btnSubirImagen.setBackground(new Color(255, 255, 255));
		panelImagen.setLayout(null);
		panelImagen.add(btnSubirImagen);
		panelImagen.add(btnTomarFoto);
		panelImagen.add(btnEliminarImagen);
		panelImagen.add(jlblFoto);

		panelDatosPersonales.setBackground(new java.awt.Color(255, 255, 255));
		panelDatosPersonales.setBorder(javax.swing.BorderFactory.createTitledBorder(
				new javax.swing.border.LineBorder(new java.awt.Color(71, 84, 130), 2, true), "Datos Personales",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(71, 84, 130))); // NOI18N
		panelDatosPersonales.setBounds(10, 10, 320, 304);
		this.add(panelDatosPersonales);

		lbIdentidad.setText("IDENTIDAD");
		panelDatosPersonales.setLayout(null);

		txtNombre.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jTxtNombreClientesActionPerformed(evt);
			}
		});

		lbNombre.setBounds(10, 25, 220, 25);
		panelDatosPersonales.add(lbNombre);

		txtNombre.setBounds(10, lbNombre.getHeight() + lbNombre.getY(), 300, 30);
		panelDatosPersonales.add(txtNombre);

		lbNombre.setText("NOMBRE");

		lbIdentidad.setBounds(10, txtNombre.getHeight() + txtNombre.getY() + 10, 220, 25);
		jTxtIdentidad.setBounds(10, lbIdentidad.getHeight() + lbIdentidad.getY(), 300, 30);
		panelDatosPersonales.add(lbIdentidad);
		panelDatosPersonales.add(jTxtIdentidad);

		try {
			jLabel14 = new javax.swing.JLabel();
			jLabel14.setBounds(10, jTxtIdentidad.getHeight() + jTxtIdentidad.getY() + 10, 220, 25);
			panelDatosPersonales.add(jLabel14);

			jTxtIdentidad.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
					new javax.swing.text.MaskFormatter("####-####-#####")));
			cmbSexo = new javax.swing.JComboBox<>();
			cmbSexo.setBounds(10, jLabel14.getHeight() + jLabel14.getY(), 300, 30);
			panelDatosPersonales.add(cmbSexo);

			cmbSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FEMENINO", "MASCULINO" }));

			jLabel14.setText("SEXO");

			JLabel lblFechaDeNacimiento = new JLabel();
			lblFechaDeNacimiento.setText("FECHA DE NACIMIENTO");
			lblFechaDeNacimiento.setBounds(10, cmbSexo.getHeight() + cmbSexo.getY() + 10, 220, 25);
			panelDatosPersonales.add(lblFechaDeNacimiento);

			txtFechaNacimiento = new JDateChooser();
			txtFechaNacimiento.setBounds(10, lblFechaDeNacimiento.getHeight() + lblFechaDeNacimiento.getY(), 300, 30);
			panelDatosPersonales.add(txtFechaNacimiento);

			Calendar cal = Calendar.getInstance();
			cal.add(Calendar.YEAR, -18);
			txtFechaNacimiento.setDate(cal.getTime());
			txtFechaNacimiento.setMaxSelectableDate(cal.getTime());
			cal.add(Calendar.YEAR, -50);
			txtFechaNacimiento.setMinSelectableDate(cal.getTime());

		} catch (java.text.ParseException ex) {
			ex.printStackTrace();
		}

		validarid.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
		validarid.setForeground(new java.awt.Color(255, 51, 51));

		panelUsuario.setBackground(new java.awt.Color(255, 255, 255));
		panelUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder(
				new javax.swing.border.LineBorder(new java.awt.Color(71, 84, 130), 2, true), "Usuario",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(71, 84, 130))); // NOI18N
		panelUsuario.setBounds(370, 330, 520, 250);
		this.add(panelUsuario);

		jTableClientes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(71, 84, 130)));
		jTableClientes.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "NOMBRE USUARIO", "ROL DE USUARIO", "ESTADO" }) {
			boolean[] canEdit = new boolean[] { false, true, true };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jTableClientes.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				jTableClientesMouseClicked(evt);
			}
		});
		jScrollPane1.setViewportView(jTableClientes);
		if (jTableClientes.getColumnModel().getColumnCount() > 0) {
			jTableClientes.getColumnModel().getColumn(0).setResizable(false);
		}

		btnAgregarUsuario.setBackground(new Color(255, 255, 255));
		btnAgregarUsuario.setText("AGREGAR USUARIO");
		btnAgregarUsuario.setFocusPainted(false);
		btnAgregarUsuario.addActionListener(e -> {
			abrirDialogUsuario();
		});
		panelUsuario.setLayout(null);
		panelUsuario.add(btnAgregarUsuario);
		panelUsuario.add(jScrollPane1);

		panelInformacionLaborales.setBackground(new java.awt.Color(255, 255, 255));
		panelInformacionLaborales.setBorder(javax.swing.BorderFactory.createTitledBorder(
				new javax.swing.border.LineBorder(new java.awt.Color(71, 84, 130), 2, true), "Informacion laboral",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(71, 84, 130))); // NOI18N
		panelInformacionLaborales.setBounds(340, 10, 290, 165);
		this.add(panelInformacionLaborales);
		jLabel12.setText("DEPARTAMENTO");

		validarid1.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
		validarid1.setForeground(new java.awt.Color(255, 51, 51));

		cmbDepto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "" }));
		cmbDepto.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jComboBox1ActionPerformed(evt);
			}
		});

		cmbCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE" }));

		jLabel15.setText("CARGO");
		panelInformacionLaborales.setLayout(null);
		panelInformacionLaborales.add(jLabel12);
		panelInformacionLaborales.add(cmbDepto);
		panelInformacionLaborales.add(validarid1);
		panelInformacionLaborales.add(jLabel15);
		panelInformacionLaborales.add(cmbCargo);

		lblSucursal = new JLabel();
		lblSucursal.setText("SUCURSAL");
		lblSucursal.setBounds(10, 114, 200, 14);
		panelInformacionLaborales.add(lblSucursal);

		cmbSucursal = new JComboBox<String>();
		cmbSucursal.setBounds(10, 129, 270, 25);
		panelInformacionLaborales.add(cmbSucursal);

		panelContacto.setBackground(new java.awt.Color(255, 255, 255));
		panelContacto.setBorder(javax.swing.BorderFactory.createTitledBorder(
				new javax.swing.border.LineBorder(new java.awt.Color(71, 84, 130), 2, true), "Contacto",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(71, 84, 130))); // NOI18N
		panelContacto.setBounds(340, 175, 290, 139);
		this.add(panelContacto);

		jLabel11.setText("CORREO ELECTRONICO");

		jLabel13.setText("NUMERO TELFONICO");

		validarid2.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
		validarid2.setForeground(new java.awt.Color(255, 51, 51));

		try {
			txtTelefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
					new javax.swing.text.MaskFormatter("(+504) ####-####")));
		} catch (java.text.ParseException ex) {
			ex.printStackTrace();
		}

		txtCorreo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jTxtNombreClientes1ActionPerformed(evt);
			}
		});
		panelContacto.setLayout(null);
		panelContacto.add(jLabel13);
		panelContacto.add(txtTelefono);
		panelContacto.add(txtCorreo);
		panelContacto.add(validarid2);
		panelContacto.add(jLabel11);

		panelUbicacion.setBackground(new java.awt.Color(255, 255, 255));
		panelUbicacion.setBorder(javax.swing.BorderFactory.createTitledBorder(
				new javax.swing.border.LineBorder(new java.awt.Color(71, 84, 130), 2, true), "Ubicacion",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(71, 84, 130))); // NOI18N
		panelUbicacion.setBounds(10, 330, 350, 250);
		this.add(panelUbicacion);
		jLabel16.setText("DIRECCION");

		validarid4.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
		validarid4.setForeground(new java.awt.Color(255, 51, 51));

		txtDireccion.setColumns(20);
		txtDireccion.setRows(5);
		jScrollPane2.setViewportView(txtDireccion);
		panelUbicacion.setLayout(null);
		panelUbicacion.add(jLabel16);
		panelUbicacion.add(jScrollPane2);
		panelUbicacion.add(validarid4);

	}// </editor-fold>//GEN-END:initComponents

	public void hacerInvisible() {
		panelContacto.setVisible(false);
		panelDatosPersonales.setVisible(false);
		panelImagen.setVisible(false);
		panelInformacionLaborales.setVisible(false);
		panelUbicacion.setVisible(false);
		panelUsuario.setVisible(false);
		btnLimpiar.setVisible(false);
		btnGuardar.setVisible(false);
	}

	public void guardar() {
		Thread hilo = new Thread(() -> {
			hacerInvisible();
			lbImgCargando.setVisible(true);
			lbTextoCargando.setVisible(true);
			this.setBackground(new Color(241, 242, 243));
			if (validar())
				return;
			Json jsonData = new Json();
			jsonData.put("dni", jTxtIdentidad.getText().replace("-", ""));
			jsonData.put("nombre", txtNombre.getText().toUpperCase());
			jsonData.put("sucursal", jsonSucursal.get(cmbSucursal.getSelectedIndex()).get("id").toString());
			jsonData.put("sexo", cmbSexo.getSelectedItem().toString());
			jsonData.put("cargo", jsonCargo.get(cmbCargo.getSelectedIndex()).get("id").toString());
			jsonData.put("departamento", jsonDepto.get(cmbDepto.getSelectedIndex()).get("id").toString());
			jsonData.put("nacimiento",
					new SimpleDateFormat("yyyy-MM-dd").format(txtFechaNacimiento.getDate()) + " 00:00:00");
			jsonData.put("direccion", txtDireccion.getText());
			jsonData.put("telefono", txtTelefono.getText());
			jsonData.put("correo", txtCorreo.getText());

			try {
				Json jsonResult = Peticion.post(menuPrincipal.getInfo().getApiPath() + "/api/empleado/", jsonData);
				if (jsonResult.get("mensaje").toString().equals("Se ha guardado exitosamente")) {
					if (imgFoto != null) {
						Json jsonResultImg = Peticion.putImagen(
								menuPrincipal.getInfo().getApiPath() + "/api/empleado/imagen/" + jsonData.get("dni"),
								imgFoto);
					}
					for (JSONObject jsonDataUser : jsonNuevosUsuarios.getArrayList()) {
						if (jsonDataUser.get("usuario_estado").toString().equals("Nuevo")) {
							Json userData = new Json();
							userData.put("email", jsonDataUser.get("usuario_email").toString());
							userData.put("password", jsonDataUser.get("usuario_password").toString());
							userData.put("rol", cmbCargo.getSelectedItem().toString());

							Json jsonResultUser = Peticion.post(menuPrincipal.getInfo().getApiPath() + "/api/user/",
									userData);
							if (jsonResultUser.get("email").toString().equals(userData.get("email").toString())) {
								Json userEmp = new Json();
								userEmp.put("usuario", jsonDataUser.get("usuario_email").toString());
								userEmp.put("dni", jsonData.get("dni").toString());

								Json jsonResultEmpUser = Peticion
										.post(menuPrincipal.getInfo().getApiPath() + "/api/empleado/user/", userEmp);
							}
						}
					}
				}
			} catch (IOException | ParseException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			panelEmpleado.login();
			dialog.dispose();
		});
		hilo.start();
	}

	public void setImagen(ImageIcon img) {
		this.imgFoto = img;
		jlblFoto.setIcon(menuPrincipal.getInfo().redimensionarImg(img, 200, 200));
	}

	private void jBtnLeer1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jBtnLeer1ActionPerformed

	}// GEN-LAST:event_jBtnLeer1ActionPerformed

	private void jTableClientesMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jTableClientesMouseClicked

	}// GEN-LAST:event_jTableClientesMouseClicked

	private void jTxtNombreClientesActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTxtNombreClientesActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jTxtNombreClientesActionPerformed

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed

	}// GEN-LAST:event_jButton3ActionPerformed

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed

	}// GEN-LAST:event_jButton2ActionPerformed

	private void jTxtNombreClientes1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jTxtNombreClientes1ActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jTxtNombreClientes1ActionPerformed

	private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBox1ActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jComboBox1ActionPerformed

	public void obtenerCargo() {

		try {

			cmbCargo.removeAllItems();
			jsonCargo = Peticion.get(menuPrincipal.getInfo().getApiPath() + "/api/cargo/",
					menuPrincipal.getInfo().getToken());

			for (JSONObject jsonObject : jsonCargo.getArrayList()) {
				cmbCargo.addItem(jsonObject.get("nombre").toString());
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, e);
		}
	}

	public void obtenerDepto() {

		try {

			cmbDepto.removeAllItems();
			jsonDepto = Peticion.get(menuPrincipal.getInfo().getApiPath() + "/api/departamento/",
					menuPrincipal.getInfo().getToken());

			for (JSONObject jsonObject : jsonDepto.getArrayList()) {
				cmbDepto.addItem(jsonObject.get("nombre").toString());
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, e);
		}
	}

	public void obtenerSucursal() {

		try {
			cmbSucursal.removeAllItems();
			jsonSucursal = Peticion.get(menuPrincipal.getInfo().getApiPath() + "/api/sucursal/",
					menuPrincipal.getInfo().getToken());

			for (JSONObject jsonObject : jsonSucursal.getArrayList()) {
				cmbSucursal
						.addItem(jsonObject.get("ciudad").toString() + " - " + jsonObject.get("sucursal").toString());
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, e);
		}
	}

	@SuppressWarnings("unchecked")
	public void abrirDialogUsuario() {
		JDialog dialogUser = new JDialog(dialog, true);
		dialogUser.setSize(315, 300);
		dialogUser.setDefaultCloseOperation(dialog.DISPOSE_ON_CLOSE);
		dialogUser.setLocationRelativeTo(dialog);
		dialogUser.setResizable(false);
		dialogUser.getContentPane().setLayout(null);

		JPanel panel = new JPanel();
		panel.setBounds(0, 0, dialogUser.getWidth(), dialogUser.getHeight());
		panel.setBackground(Color.white);
		dialogUser.getContentPane().add(panel);
		panel.setLayout(null);

		JLabel lbTitulo = new JLabel("Agregar nuevo Usuario");
		lbTitulo.setBounds(10, 5, 280, 30);
		lbTitulo.setFont(new Font("Arial Black", 1, 16));
		panel.add(lbTitulo);

		JLabel lbUsuario = new JLabel("Nombre de usuario");
		lbUsuario.setBounds(10, lbTitulo.getHeight() + lbTitulo.getY() + 10, 280, 20);
		lbUsuario.setFont(new Font("Arial", 1, 14));
		panel.add(lbUsuario);

		JTextField txtUsuario = new JTextField();
		txtUsuario.setBounds(10, lbUsuario.getHeight() + lbUsuario.getY(), 280, 30);
		txtUsuario.setFont(new Font("Arial", 1, 14));
		panel.add(txtUsuario);

		JLabel lbPass1 = new JLabel("Contraseña");
		lbPass1.setBounds(10, txtUsuario.getHeight() + txtUsuario.getY() + 10, 280, 20);
		lbPass1.setFont(new Font("Arial", 1, 14));
		panel.add(lbPass1);

		JPasswordField txtPass1 = new JPasswordField();
		txtPass1.setBounds(10, lbPass1.getHeight() + lbPass1.getY(), 280, 30);
		txtPass1.setFont(new Font("Arial", 1, 14));
		panel.add(txtPass1);

		JLabel lbPass2 = new JLabel("Repetir contraseña");
		lbPass2.setBounds(10, txtPass1.getHeight() + txtPass1.getY() + 10, 280, 20);
		lbPass2.setFont(new Font("Arial", 1, 14));
		panel.add(lbPass2);

		JPasswordField txtPass2 = new JPasswordField();
		txtPass2.setBounds(10, lbPass2.getHeight() + lbPass2.getY(), 280, 30);
		txtPass2.setFont(new Font("Arial", 1, 14));
		panel.add(txtPass2);

		JButton btnAgregar = new JButton("Agregar", new ImageIcon(getClass().getResource("/imagenes/agg.png")));
		btnAgregar.setBounds(65, txtPass2.getHeight() + txtPass2.getY() + 10, 150, 30);
		btnAgregar.setFont(new Font("Arial Black", 1, 14));
		btnAgregar.setBackground(Color.white);
		btnAgregar.addActionListener(e -> {
			if (!exiteUser(txtUsuario.getText())) {
				if (String.valueOf(txtPass1.getPassword()).length() < 8) {
					JOptionPane.showMessageDialog(null, "La contraseña debe contener al menos 8 caracteres");
					txtPass1.requestFocus();
					return;
				}
				if (!String.valueOf(txtPass1.getPassword()).equals(String.valueOf(txtPass2.getPassword()))) {
					JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden");
					txtPass1.requestFocus();
					return;
				}

				JSONObject nuevo = new JSONObject();
				nuevo.put("usuario_email", txtUsuario.getText());
				nuevo.put("usuario_password", String.valueOf(txtPass1.getPassword()));
				nuevo.put("usuario_estado", "Nuevo");
				jsonNuevosUsuarios.add(nuevo);

				jTableClientes.setModel(
						new ModeloTabla(jsonNuevosUsuarios, new String[] { "usuario_email", "usuario_estado" },
								new String[] { "NOMBRE USUARIO", "ESTADO" }));
				dialogUser.dispose();
			} else
				JOptionPane.showMessageDialog(null, "Este nombre de usuario ya existe\nPor favor ingrese otro");
		});
		panel.add(btnAgregar);

		dialogUser.setVisible(true);
	}

	public void obtenerTodosUsuarios() {
		try {

			jsonUsuarios = Peticion.get(menuPrincipal.getInfo().getApiPath() + "/api/user/nombre",
					menuPrincipal.getInfo().getToken());
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, e);
		}
	}

	public boolean exiteUser(String user) {
		for (JSONObject jsonD : jsonUsuarios.getArrayList()) {
			if (jsonD.get("nombre").toString().equals(user))
				return true;
		}
		return false;
	}

	public boolean validar() {
		if (txtNombre.getText().length() < 5) {
			JOptionPane.showMessageDialog(null, "Este campo debe contener al menos 5 caracteres", "ERROR", 0);
			txtNombre.requestFocus();
			return true;
		} else if (jTxtIdentidad.getText().length() < 5) {
			JOptionPane.showMessageDialog(null, "Este campo debe contener al menos 5 caracteres", "ERROR", 0);
			jTxtIdentidad.requestFocus();
			return true;
		} else if (txtTelefono.getText().length() < 5) {
			JOptionPane.showMessageDialog(null, "Este campo debe contener al menos 5 caracteres", "ERROR", 0);
			txtTelefono.requestFocus();
			return true;
		} else if (txtCorreo.getText().length() < 5) {
			JOptionPane.showMessageDialog(null, "Este campo debe contener al menos 5 caracteres", "ERROR", 0);
			txtCorreo.requestFocus();
			return true;
		} else if (txtDireccion.getText().length() < 5) {
			JOptionPane.showMessageDialog(null, "Este campo debe contener al menos 5 caracteres", "ERROR", 0);
			txtDireccion.requestFocus();
			return true;
		}

		return false;
	}

	public void openFile() {
		JDialog dia;
		FileDialog ventana = new FileDialog(dialog, "Seleccionar imagen", FileDialog.LOAD);
		ventana.show();
		if (ventana.getDirectory() != null) {
			String fl = ventana.getDirectory() + ventana.getFile();
			try {

				ImageIcon img = new ImageIcon(fl);
				int imgAncho = img.getIconWidth();
				int imgAlto = img.getIconHeight();

				if (imgAncho < 300 || imgAncho > 1200)
					return;
				if (imgAlto < 300 || imgAlto > 600)
					return;
				if (imgAncho != imgAlto) {
					new RecortarImagen(img, this, dialog).setVisible(true);
					;
				}

			} catch (Exception e2) {
				JOptionPane.showMessageDialog(this, "Ocurrió un error");
			}
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnAgregarUsuario;
	private javax.swing.JButton btnTomarFoto;
	private javax.swing.JButton btnEliminarImagen;
	private javax.swing.JButton btnSubirImagen;
	private javax.swing.JComboBox<String> cmbDepto;
	private javax.swing.JComboBox<String> cmbSexo;
	private javax.swing.JComboBox<String> cmbCargo;
	private javax.swing.JLabel lbNombre;
	private javax.swing.JLabel jLabel11;
	private javax.swing.JLabel jLabel12;
	private javax.swing.JLabel jLabel13;
	private javax.swing.JLabel jLabel14;
	private javax.swing.JLabel jLabel15;
	private javax.swing.JLabel jLabel16;
	private javax.swing.JLabel lbIdentidad;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel panelDatosPersonales;
	private javax.swing.JPanel panelUsuario;
	private javax.swing.JPanel panelInformacionLaborales;
	private javax.swing.JPanel panelContacto;
	private javax.swing.JPanel panelImagen;
	private javax.swing.JPanel panelUbicacion;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JTable jTableClientes;
	private javax.swing.JTextArea txtDireccion;
	private javax.swing.JFormattedTextField jTxtIdentidad;
	private javax.swing.JTextField txtNombre;
	private javax.swing.JTextField txtCorreo;
	private javax.swing.JFormattedTextField txtTelefono;
	private javax.swing.JLabel jlblFoto;
	private javax.swing.JLabel validarid;
	private javax.swing.JLabel validarid1;
	private javax.swing.JLabel validarid2;
	private javax.swing.JLabel validarid4;
	private JDateChooser txtFechaNacimiento;
	private JButton btnLimpiar;
	private JLabel lblSucursal;
	private JComboBox<String> cmbSucursal;
}
